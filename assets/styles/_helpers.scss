%spacer {
	margin-bottom: $pad;
}


// Mixins

@mixin flexbox($display: flex, $direction: column, $justify: center, $align: center) {
	display: $display;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
}

// Create container block
@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-left: auto;
  margin-right: auto;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
}

// Align items in rows
@mixin alignment($class) {
  // Horizontal
  &.start-#{$class} {
    justify-content: flex-start;
    text-align: start;    
  }
  &.center-#{$class} {
    justify-content: center;
    text-align: center;
  }
  &.end-#{$class} {
    justify-content: flex-end;
    text-align: end;
  }
  &.between-#{$class} {
    justify-content: space-between;
  }
  &.around-#{$class} {
    justify-content: space-around;
  }

  // Vertical
  &.top-#{$class} {
    align-items: flex-start;
  }
  &.middle-#{$class} {
    align-items: center;
  }
  &.bottom-#{$class} {
    align-items: flex-end;
  }
  @if ($class != xs) {
    &.stretch-#{$class} {
      align-items: stretch;
    }
  }
}

// Set default flex properties
@mixin make-grid() {
  $list: '.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1';

  @for $i from 2 through $grid-columns {
    $list: '#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}';
  }

  #{$list} {
    flex: 0 0 auto;
    padding-left: ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
    box-sizing: border-box;
  }
}

// Set columns width and offset
@mixin calc-column($index, $class, $type) {
  @if ($type == width) {
    .col-#{$class}-#{$index} {
      flex-basis: percentage(($index / $grid-columns));
    }
  }
  @if (($type == offset) and ($index < $grid-columns)) {
    .col-#{$class}-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
}

// Loop through columns and set their properties
@mixin loop-columns($class) {
  @for $i from 1 through $grid-columns {
    @include calc-column($i, $class, width);
    @include calc-column($i, $class, offset);
  }

  &.first-#{$class} {
    order: -1;
  }
  &.last-#{$class} {
    order: 1;
  }
}